#
# Proftpd sample configuration for SQL-based authentication.
# (This is not to be used if you prefer a PAM-based SQL authentication)
# based on default proftpd config debian jessie, modify ^SQLConnectInfo
#
# Thanks to Robert Tulke <rt@debian.sh>
# https://github.com/rtulke/

<IfModule mod_sql_sqlite.c>
# SQL backend is Sqlite
#
#SQLBackend	sqlite3
#
#SQLEngine on
#SQLAuthenticate on
#
# Connection
#SQLConnectInfo p /path/to/auth.sqlite3
#
# Describes both users/groups tables
#
#SQLUserInfo users userid passwd uid gid homedir shell
#SQLGroupInfo groups groupname gid members

SQLLogFile              /var/log/proftpd/proftpd-sqlite3.log
CreateHome              on 775
AuthOrder               mod_sql.c

SQLBackend              sqlite3
SQLEngine               on
SQLPasswordEngine       on
SQLAuthenticate         on
SQLAuthTypes            pbkdf2
SQLPasswordPBKDF2       sha1 5000 20
SQLPasswordUserSalt     name Prepend
SQLPasswordEncoding     hex

SQLConnectInfo          /path/to/auth.sqlite3
SQLUserInfo             users userid passwd uid gid homedir shell
SQLGroupInfo            groups groupname gid members
SQLUserWhereClause      "disabled != 1"
SQLLog PASS             updatecount
SQLNamedQuery           updatecount UPDATE "login_count=login_count+1, last_login=now() WHERE userid='%u'" users

 # Used to track xfer traffic per user (without invoking a quota)
SQLLog RETR             bytes-out-count
SQLNamedQuery           bytes-out-count UPDATE "bytes_out_used=bytes_out_used+%b WHERE userid='%u'" users
SQLLog RETR             files-out-count
SQLNamedQuery           files-out-count UPDATE "files_out_used=files_out_used+1 WHERE userid='%u'" users

SQLLog STOR             bytes-in-count
SQLNamedQuery           bytes-in-count UPDATE "bytes_in_used=bytes_in_used+%b WHERE userid='%u'" users
SQLLog STOR             files-in-count
SQLNamedQuery           files-in-count UPDATE "files_in_used=files_in_used+1 WHERE userid='%u'"
</IfModule>
